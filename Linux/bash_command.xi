Установить, отобразить, проверить порт, удалить файлы типа log в папке, удалить пустые папки, сделать скрипт который заменяет символ во всех конфигах, перенаправить вывод файла в другой файл и т.п.
Вот неполный список команд на который можно опираться, чтобы понять тему.

1. Команды:(обзор, копирование, манипуляции с данными)
ls: обзор текущей директории .
ls -a : показывает каталог со скрытыми файлами 
ls -l = ll: больше инвформации 
ls -l --author: будет +1 колонка с автором 
ls -lh: размер в более удобном виде (в КБ и т.д.)
ls -X: сортировка 
ls -t: сорировка по времени модификации 
ls -R: рекурсивный вывод 
ls -m: вывод через запятую 

rm: удаление файлов и директорий .
rm -f: игнорирует удаление 
rm -r: рекурсивное удаление 
rm -v: пишет, что удалил успешно
rm -i: спрашивает, нужно ли удалить / подстраховывает 

mkdir: создать директорию .
mkdir -m: права доступа 

pwd: отображает директорию .
pwd -P: показывает полный путь без учета символических ссылылок 

cd: ходит по директориям .
cd -P: позволяет следовать по символическим ссылкам перед тем, как будут обработаны все переходы ".."
cd -L: переходит по символическим ссылкам только после того, как были обработаны ".."

echo: вывод сообщений на экран .
echo -e \\ – отображает символ обратной косой черты.
echo -e \a – оповещение (BEL)
echo -e \b – отображает символ возврата на одну позицию.
echo -e \c – подавить дальнейший вывод
echo -e \e – отображает символ escape.
echo -e \f – отображает символ подачи формы.
echo -e \n – отображает новую строку.
echo -e \r – отображает возврат каретки.
echo -e \t – отображает горизонтальную вкладку.
echo -e \v – отображает вертикальную вкладку. 

file: определение типа файла .
file -b: показывает только тип 
file -f: определяются типы файлов 
file -m: задается магический файл 
file -c: проверка правильности формата магического файла 
"Магическая последовательность байтов" - содержит шаблоны для распознавания типов данных -> /usr/share/file/magic

mv: переместить или переименовать файлы или директории .
mv -b: создать резервную копию 
mv -f: не спрашивать разрешение у пользователя 
mv -i: спрашивать разрешение у пользователя 
mv -n: не перезаписывать существующие файлы 
mv -u: перемещать только если исходный файл новее, чем файл назначения или если файл-назначения отсутствует
mv -v: вывести инфу о переносе
mv -S: Изменить символ суффикса, который добавляется к именам резервных копий (при использовании опции --backup). По умолчанию СУФФИКС равен значку тильды ~

cp: копирование файлов и директорий .
cp -f: перезаписывать существующие файлы
cp -i: спрашивать, нужно ли перезаписывать существующие файлы
cp -L: копировать не символические ссылки, а то, на что они указывают
cp -n: не перезаписывать существующие файлы
cp -P: не следовать символическим ссылкам
cp -r: копировать папку рекурсивно
cp -s: не выполнять копирование файлов, а создавать символические ссылки
cp -u: скопировать файл, только если он был изменён
cp -p: сохранять владельца, временные метки и флаги доступа при копировании
cp -t: считать файл-приемник директорией и копировать файл-источник в эту директорию

rmdir: удаление каталогов. Перед удалением директория должна быть пустой .
rmdir -p: удаление каталогов и вышележащие каталоги, оказавшиеся пустыми
rmdir -s: подавление сообщения, выдаваемого при действии опции -p

clear: очистить экран .

sort: сортировка .
sort -b: не учитывать пробелы
sort -d: использовать для сортировки только буквы и цифры
sort -i: сортировать только по ASCII символах
sort -n: сортировка строк linux по числовому значению
sort -r: сортировать в обратном порядке
sort -с: проверить был ли отсортирован файл
sort -o: вывести результат в файл
sort -u: игнорировать повторяющиеся строки
sort -m: объединение ранее отсортированных файлов
sort -k: указать поле по которому нужно сортировать строки, если не задано, сортировка выполняется по всей строке
sort -f: использовать в качестве разделителя полей ваш символ вместо пробела.

cat: вывод файла на экран .
cat -b: нумеровать только непустые строки
cat -E: показывать символ $ в конце каждой строки
cat -n: нумеровать все строки
cat -s: удалять пустые повторяющиеся строки
cat -T: отображать табуляции в виде ^I

less: чтение файла частями .
less -N: отобразить номера строк с командой less
less + F: просмотр конца строки в режиме реального времени 
q – выход
SPACE – пролистать один экран
d – пролистать пол экрана
b - вернуться на предыдущую страницу 
g – переместить в начало файла
G – переместить в конец файла
<N>g – перейти на строку N
/pattern – поиск по шаблону вперёд
?pattern – поиск по шаблону назад
n – следующее совпадение
N – предыдущее совпадение

vim: редактирование файла .
0 (ноль) – перескочить на первый символ в строке
$ – перескочить на последний символ в строке
j - на одну строку вниз
k - на одну строку вверх
w - на слово вправо
b - на слово влево
H - перейти в низ экрана
G - перейти в конец файла
dd - удалить всю строку;
yy - скопировать всю строку 
:q! выйти отбросив изменения 
:w – записать или сохранить файл
:w filename – для сохранение под другим именем
:wq – сохранить и выйти
х – удаление символа под курсором
dd – удаление текущей строки
/pattern - поиск по шаблону вперед 
n – следующее совпадение
N – предыдущее совпадение

du: показывает суммарную инфу об использовании диска файлами и директориями .
du -h: выводит размеры в удобочитаемом виде 
du -s: выводит итоговую информацию о котологе, без подпапок 
du -a: использование диска всеми файлами, а не только каталогами
du -k: выводит информацию в Кб 
du -c: выводит итоговую информацию об использовании дисковой памяти 
du --exclude='*.txt': подсчитывает размеры, кроме файлов с *.txt
du --time: показывает время модификации 

zip: архивирование файлов, каталогов .
zip archive.zip file1.txt file2.log
zip -r: добавить папку с файлами в архив 
zip -x: исключить из архива при создании 
zip -s: разбивка архива на определенный размер k (kB), m (MB), g (GB) или t (TB)
zip -P: запаролировать архив (можно использовать ключ e тогда пароль будете вводить в отдельной строке со звездочками)
1-9: степень сжатия (где 1 без сжатия, а 9 лучшее сжатие)

Пример 
zip –r  -9 -P 123 — archive.zip /home/nibbl/desktop/myfile 

unzip: разархивирование .
unzip -d: указать директорию для разархивации (unzip archive -d tmp/)
unzip -l: вывести список файлов в архиве
unzip -d: удалить определенный файл или каталог из уже сделанного архива
unzip -v: показывает детальную информацию по файлам в архиве (unzip archive -d tmp/ protected/*)

tar: заархивирование и разахивирование файлов и директорий .
tar -c: создать архив
tar -f: указать имя архива
tar -j: cжать/распаковать архив дополнительно при помощи bzip2
tar -z: сжать/распаковать архив дополнительно при помощи gzip
tar -v: выводит список прогресса
tar x: извлечь файлы из архива
tar f: указать имя архива
tar j: cжать/распаковать архив дополнительно при помощи bzip2
tar z: сжать/распаковать архив дополнительно при помощи gzip
tar v: выводит список прогресса
tar С: указываем альтернативное место для разархивирования файлов

tee: вывести стандартный вывод (stdout) программы и записать его в файл .
tee -a: не перезаписывать файлы, а добавлять их к заданным файлам
tee -i: игнорировать сигналы прерывания

Пример: pwd | tee -a вывод.txt

Записать вывод прямо в файл и не показывать его в терминале:
df | tee вывод5.txt > /dev/null

tail: выводит заданное количество строк с конца файла .
tail -c: выводить указанное количество байт с конца файла
tail -f: обновлять информацию по мере появления новых строк в файле
tail -n: выводить указанное количество строк из конца файла
tail --pid: используется с опцией -f, позволяет завершить работу утилиты, когда завершится указанный процесс;
tail -q: не выводить имена файлов
tail --retry: повторять попытки открыть файл, если он недоступен
tail -v: выводить подробную информацию о файле


rsync: умеет копировать и синхронизировать файлы с локальной машины на удалённую — и наоборот .
работает быстрее, чем scp 
rsync -v: подробный режим
rsync -r: копировать данные рекурсивно (без сохранения инфы о времени изменения файлов и правах доступа)
rsync -a: режим архивирования, позволяет копировать данные рекурсивно с сохранением симлинков, правах доступа на файлы/каталоги
rsync -z: сжатие данные
rsync -h: вывод данных в human-readable формате
rsync -e: протокол 
rsync -W: выполнить полное копирование (rsync копирует только изменившиеся блоки данных)
rsync -z: сжимает все передаваемые данные файлов
--progress: можно вывести больше инфомармации о том, как происходит передач
-–include: включить в передачу
-–exclude: исключить файлы из педедачи 
--max-size: максимальный размер файла, который будет передан
--remove-source-files: удалить данные после выполнения копирования или синхронизации
--dry-run: выполнить проверку того, как будет выполнена задача, но без реальной передачи данных


man: библиотека в системе Linux, содержащая руководства по командам, утилитам, программированию .
man -k: поиск Man-страниц
1 раздел - Основные команды
2 раздел - Системные вызовы
3 раздел - Библиотечные функции, включая стандартную библиотеку языка C
4 раздел - Специальные файлы (обычно устройства из /dev) и драйвера
5 раздел - Форматы файлов и соглашения
6 раздел - Игры и скринсейверы
7 раздел - Разное
8 раздел - Команды системного администрирования и демоны

mount: монтирование .
mount -h: вывести справку;
mount -v: подробный режим;
mount -a: примонтировать все устройства, описанные в fstab;
mount -F: создавать отдельный экземпляр mount для каждого отдельного раздела;
mount -f: не выполнять никаких действий, а только посмотреть что собирается делать утилита;
mount -n: не записывать данные о монтировании в /etc/mtab;
mount -l: добавить метку диска к точке монтирования;
mount -c: использовать только абсолютные пути;
mount -r: монтировать раздел только для чтения;
mount -w: монтировать для чтения и записи;
mount -L: монтировать раздел по метке;
mount -U: монтировать раздел по UUID;
mount -B: монтировать локальную папку;
mount -R: перемонтировать локальную папку.

nohup: выполнение команды в фоновом режиме, после того, как пользователь выйдет из системы .

2. Команды:(установка) 
yum: установка / удаление пакетов .
yum remove {pocket}: удаление 
yum update 'gr*': обновление до новой версии 
yum list gcl: вывод информации о пакете gcl

yum list: список названий пакетов из репозиторий
yum list available: список всех доступных пакетов
yum list installed: список всех установленных пакетов
yum list installed httpd: становлен ли указанный пакет
yum install {pocket}: установить пакет 
yum remove {pocket}: удаление пакета 
yum update-to: обновить до последне версии 
yum localinstall http://server/repo/httpd.rpm: установить с http
yum downgrade: откатиться к предыдущей версии пакета

apt get: работа с пакетами ubuntu и Debian (/etc/apt/sources.list) .
apt install	        apt-get install	        Установить пакет
apt remove	        apt-get remove	        Удалить пакет
apt purge	        apt-get purge	        Удалить пакет и конфигурационные файлы
apt autoremove	    apt-get autoremove	    Удалить неиспользуемые пакеты
apt update	        apt-get update	        Обновить список пакетов
apt upgrade	        apt-get upgrade	        Обновить пакеты
apt full-upgrade	apt-get dist-upgrade    Обновить пакеты (удалить и установить новые, если требуется)
apt list	        dpkg-query --list	    Список пакетов
apt search          apt-cache search	    Поиск пакета
apt show	        apt-cache show	        Информация о пакете

pip (Python Installs Packages): пакетный менеджер для языка программирования Python: .
Для Python 2 используется команда pip, а для Python 3 команда pip3
pip install: установить пакет
pip download: скачать пакет и зависимости (без установки)
pip uninstall: удалить пакет
pip list: вывести список установленных пакетов
pip show: показать информацию о пакете
pip search: поиск пакета (в репозитории PyPI)
--upgrade: обновить пакет
--index-url URL: выполнить установку пакета, используя репозиторий по адресу URL, а не из PyPI

3. Команды:(доступы) 
su: изменить "владельца" текущего сеанса без необходимости завершать сеанс и открывать новый .
su -c 'ls /boot': позволяет сразу под нужным аккаунтом запустить нужное приложение

sudo: утилита, предоставляющая привилегии root для выполнения административных операций в соответствии со своими настройками .

!!: выполнить предыдущее действие .

groups/users: вывод списка групп, в которых состоит пользователь с указанным именем .

chmod: настройка папок и файлов rwx .

4. Команды:(регулярка)
grep: фильтрация .
grep -b: показывать номер блока перед строкой
grep -c: подсчитать количество вхождений шаблона
grep -h: не выводить имя файла в результатах поиска внутри файлов Linux
grep -i: не учитывать регистр
grep -l: отобразить только имена файлов, в которых найден шаблон
grep -n: показывать номер строки в файле
grep -s: не показывать сообщения об ошибках
grep -v: инвертировать поиск, выдавать все строки кроме тех, что содержат шаблон;
grep -e: использовать регулярные выражения при поиске
grep -An: показать вхождение и n строк до него
grep -Bn: показать вхождение и n строк после него
grep -Cn: показать n строк до и после вхождения
 
awk: инструмент для обработки и фильтрации текста .
$NF - последние записи 
Пример:
ll | awk {totalBytes+=$NF} END {print totalBytes}'
awk '{print $1,$3}' - печатает только первый и третий столбцы, используя stdin

|: перенаправление вывода. Результат вывода одной команды передается на вход другой команде .

find: поиск файлов и каталогов на основе специальных условий .
find [папка] [параметры] критерий шаблон [действие]
Папка - каталог в котором будем искать
Параметры - дополнительные параметры, например, глубина поиска, и т д
Критерий - по какому критерию будем искать: имя, дата создания, права, владелец и т д.
Шаблон - непосредственно значение по которому будем отбирать файлы.

Параметры:
-P: никогда не открывать символические ссылки
-L: получает информацию о файлах по символическим ссылкам. Важно для дальнейшей обработки, чтобы обрабатывалась не ссылка, а сам файл.
-maxdepth: максимальная глубина поиска по подкаталогам, для поиска только в текущем каталоге установите 1.
-depth: искать сначала в текущем каталоге, а потом в подкаталогах
- mount: искать файлы только в этой файловой системе.
-version: показать версию утилиты find
-print: выводить полные имена файлов
-type f: искать только файлы
-type d: поиск папки в Linux

Критерии: 
-name: поиск файлов по имени
-perm: поиск файлов в Linux по режиму доступа
-user: поиск файлов по владельцу
-group: поиск по группе
-mtime: поиск по времени модификации файла
-atime: поиск файлов по дате последнего чтения
-nogroup: поиск файлов, не принадлежащих ни одной группе
-nouser: поиск файлов без владельцев
-newer: найти файлы новее чем указанный
-size: поиск файлов в Linux по их размеру

-exec: опция, которая позволяет выполнять произвольные команды для найденных файлов .
Пример:
Удалить все текстовые файлы в tmp:
find /tmp -type f -name "*.txt" -exec rm -f {} \

5. Команды:(systemd) 
Systemd: менеджер системы и служб для Linux .
> /usr/lib/systemd/system - системные юниты, поставляемые обычно вместе с приложениями;
> /run/systemd/system - динамически создаваемые юниты (т.е. на лету);
> /etc/systemd/system - юниты и исправления, внесённые администратором

systemd-analyze: покажет время загрузки системы.

Виды служб:
service - обычная служба, программа
target - группа служб
automount - точка автоматического монтирования
device - файл устройства, генерируется на этапе загрузки
mount - точка монтирования
path - файл или папка
scope - процесс
slice - группа системных служб systemd
snapshot - сохраненное состояние запущенных служб
socket - сокет для взаимодействия между процессами.

systemctl: специальный инструмент для управления службами в Linux .
systemctl опции команда служба служба

Команды:
list-units: посмотреть все службы (юниты), аналог опции -t
list-sockets: посмотреть все службы сокетов
start: запустить службу linux
stop: остановить службу linux
reload: обновить конфигурацию службы из файла юнита
restart: перезапустить службу
try-restart: перезапустить службу, только если она запущена
reload-or-restart: обновить конфигурацию затем выполнить перезапуск службы linux, если не поддерживается - только перезапустить
isolate: запустить только одну службу вместе с ее зависимостями, все остальные остановить
kill: отправить сигнал завершения процессу используется вместе с опциями --signal и --kill-who
is-active: проверить запущена ли служба linux
is-failed: проверить не завершилась ли служба с ошибкой
status: посмотреть состояние и вывод службы
show: посмотреть параметры управления службой в Linux
reset-failed: перезапустить службы linux, завершившиеся с ошибкой
list-dependencies: посмотреть зависимости службы linux
list-unit-files: вывести все установленные файлы служб
enable: добавить службу в автозагрузку
disable: удалить службу из автозагрузки
is-enabled: проверить если ли уже служба в автозагрузке
reenable: сначала выполнить disable потом enable для службы
list-jobs: все запущенные службы linux независимо от типа
snapsot: сохранить состояние служб, чтобы потом восстановить
daemon-reload: обновить конфигурацию всех служб
mask: сделать юнит недоступным
unmask: вернуть файл службы linux

Опции:
--type: тип служб для вывода
--all: показать все известные службы, даже не запущенные
-q: минимальный вывод
--version: версия программы
--no-pager: не использовать постраничную навигацию
--no-legend: не выводить подробное описание
-f: принудительное выполнение команды
--runtime: не сохранять вносимые изменения после перезагрузки
-n: количество строк вывода лога для команды status
--plain: использовать обычный текстовый режим вместо деревьев
--kill-who: задать процесс, которому нужно отправить сигнал
--signal: сигнал, который нужно отправить.
--state: отфильтровать список служб по состоянию.

Примеры:
systemctl list-units --type service --state failed

journal: работа с журналом для просмотра логов определенного сервиса или загрузки системы .
--full: отображать все доступные поля
--all: отображать все поля в выводе full, даже если они содержат непечатаемые символы или слишком длинные
--pager-end, -e: отобразить только последние сообщения из журнала
--lines, -n: количество строк, которые нужно отображать на одном экране, по умолчанию 10
--no-tail: отображать все строки доступные строки
--reverse, -r: отображать новые события в начале списка
--output, -o: настраивает формат вывода лога
--output-fields: поля, которые нужно выводить
--catalog, -x: добавить к информации об ошибках пояснения, ссылки на документацию или форумы там, где это возможно
--quiet, -q: не показывать все информационные сообщения
--merge, -m: показывать сообщения из всех доступных журналов
--boot, -b: показать сообщения с момента определенной загрузки системы. По умолчанию используется последняя загрузка;
--list-boots: показать список сохраненных загрузок системы
--dmesg, -k: показывает сообщения только от ядра. Аналог вызова команды dmesg
--identifier, -t: показать сообщения с выбранным идентификатором
--unit, -u: показать сообщения от выбранного сервиса
--user-unit: фильтровать сообщения от выбранной сессии
--priority, -p: фильтровать сообщения по их приоритету. Есть восемь уровней приоритета, от 0 до 7
--grep: фильтрация по тексту сообщения
--cursor, -c: начать просмотр сообщений с указанного места
--since, -S, --until, -U - фильтрация по дате и времени
--field, -F: вывести все данные из выбранного поля
--fields, -N: вывести все доступные поля
--system: выводить только системные сообщения
--user: выводить только сообщения пользователя
--machine, -M: выводить сообщения от определенного контейнера
--header: выводить заголовки полей при выводе журнала
--disk-usage: вывести общий размер лог файлов на диске
--list-catalog: вывести все доступные подсказки для ошибок
--sync: синхронизировать все не сохраненные журналы с файловой системой
--flush: перенести все данные из каталога /run/log/journal в /var/log/journal
--rotate: запустить ротацию логов;
--no-pagerL выводить информацию из журнала без возможности листать страницы
-f: выводить новые сообщения в реальном времени, как в команде tail
--vacuum-time: очистить логи, давностью больше указанного периода
--vacuum-size: очистить логи, чтобы размер хранилища соответствовал указанному

6. Команды:(сеть) curl, ssh, telnet
curl: набор библиотек, в которых реализуются базовые возможности работы с URL страницами и передачи файлов .
Библиотека поддерживает работу с протоколами: FTP, FTPS, HTTP, HTTPS, TFTP, SCP, SFTP, Telnet, DICT, LDAP, POP3, IMAP и SMTP .
Опции: 
-#: отображать простой прогресс-бар во время загрузки
-1: использовать протокол шифрования tlsv1
-0: использовать протокол http 1.0
-2: использовать sslv2
-3: использовать sslv3
-4: использовать ipv4
-6: использовать ipv6
-A: указать свой USER_AGENT
-b: сохранить Cookie в файл
-c: отправить Cookie на сервер из файла
-C: продолжить загрузку файла с места разрыва или указанного смещения
-m: максимальное время ожидания ответа от сервера
-d: отправить данные методом POST
-D: сохранить заголовки, возвращенные сервером в файл
-e: задать поле Referer-uri, указывает с какого сайта пришел пользователь
-E: использовать внешний сертификат SSL
-f: не выводить сообщения об ошибках
-F: отправить данные в виде формы
-G: если эта опция включена, то все данные, указанные в опции -d будут передаваться методом GET
-H: передать заголовки на сервер
-I: получать только HTTP заголовок, а все содержимое страницы игнорировать
-j: прочитать и отправить cookie из файла
-J: удалить заголовок из запроса
-L: принимать и обрабатывать перенаправления
-s: максимальное количество перенаправлений с помощью Location;
-o: выводить контент страницы в файл;
-O: сохранять контент в файл с именем страницы или файла на сервере;
-p: использовать прокси;
--proto: указать протокол, который нужно использовать
-R: сохранять время последнего изменения удаленного файла
-s: выводить минимум информации об ошибках
-S: выводить сообщения об ошибках
-T: загрузить файл на сервер
-v: максимально подробный вывод
-y: минимальная скорость загрузки
-Y: максимальная скорость загрузки
-z: скачать файл, только если он был модифицирован позже указанного времени
-V: вывести версию

ssh: удаленное управление серверами через терминал .
ssh [опции] имя пользователя@сервер [команда]
Опции:
f: перевести ssh в фоновый режим
g: разрешить удаленным машинам обращаться к локальным портам
l: имя пользователя в системе
n: перенаправить стандартный вывод в /dev/null
p: порт ssh на удаленной машине
q: не показывать сообщения об ошибках
v: режим отладки
x: отключить перенаправление X11
X: включить перенаправление Х11
C: включить сжатие

scp /адрес/локального/файла пользователь@хост:адерс/папки 

telnet: утилита предназначена для создания интерактивного соединения между удаленными компьютерами .
telnet опции хост порт .

Опции: 
-4 - принудительно использовать адреса ipv4
-6 - принудительно использовать адреса ipv6
-8 - использовать 8-битную кодировку, например, Unicode
-E - отключить поддержку Escape последовательностей
-a - автоматический вход, берет имя пользователя из переменной окружения USER
-b - использовать локальный сокет
-d - включить режим отладки
-р - режим эмуляции rlogin
-e - задать символ начала Escape последовательности
-l - пользователь для авторизации на удаленной машине

telnet localhost 22 - проверка порта 

ping: диагностики сети .
ping опции адрес_узла

Опции: 
-4 - использовать только ipv4 (по умолчанию)
-6 - использовать только ipv6
-A - адаптивный режим, время между отправками пакета адаптируется к времени передачи и приема пакета, но не меньше чем 200мс;
-b - разрешить ping широковещательного адреса
-с - количество пакетов, которые нужно отправить
-D - выводить время в виде UNIX timestamp
-f - режим флуда, в этом режиме пакеты передаются без задержек, может использоваться для совершения DoS атак на отдельные узлы. Количество точек, которые выводит утилита обозначает количество потерянных пакетов;
-i - интервал в секундах между отправкой пакетов
-I - использовать этот сетевой интерфейс для отправки пакетов
-l - режим перегрузки, отправляется очень много пакетов и система не следит за ответными пакетами
-n - не получать домены для ip адресов
-r - игнорировать таблицы маршрутизации и отправить пакет на указанный интерфейс
-s - размер одного пакета
-t - установить TTL вручную
-v - более подробный вывод

7. Команды:(крон) /etc/crontab
crontab: задание планирофвщика 
crontab -e: задать свое расписание 
crontab -l: список текущих заданий

* * * * * Команда, которая будет выполнена
- - - - -
| | | | |
| | | | - День недели (0 - 7) (воскресенье = 0 или 7)
| | | --- Месяц (1 - 12)
| | --- День месяца (1 - 31)
| ---- Час (0 - 23)
----- Минута (0 - 59)

8. Команды:(нагрузка) 
PID - уникальный идентификатор процесса в операционной системе .
pidof — найти идентификатор процесса запущенной программы .
pgrep - поиск или обработка сигналов на основе имени и других атрибутов .
ps aux - сообщает моментальный снимок текущих процессов .
ps aux | grep "apache2"
pstree - отображает дерево процессов .
ss - используется для вывода статистики сокетов .
netstat - отображает список открытых сокетов .
lsof - список открытых файлов .

free - информация об использованной и неиспользованной памяти .
-h: показывает в удобочитаемом виде 
-b: показывает в байтах 
-m: показывает в мегабайтах 
-g: показывает в гигабайтах 

/proc/cpuinfo - характеристика процессора .
lscpu - отображает содержимое /proc/cpuinfo в более удобном для пользователя виде .
Например количество активных ядер, потоков, сокетов, NUMA .

renice - менее вежливый, можно запустить команду с определённым приоритетом .
renice -n приоритет -p PID
renuce 15 -u semaev 

nice - вежливый, можно изменить приоритет уже запущенного процесса .
nice yes > /dev/null &

top - показывает запущенные в Linux процессы программ и служб .
USER — имя пользователя, являющегося владельцем задачи
PR — приоритет задачи в расписании, «rt» - задача запущена в расписании приоритетов
NI — значение nice задачи. Негативное значение - высокий приоритет, положительное - низкий приоритет
VIRT — общее количество используемой задачей виртуальной памяти
RES — используемая оперативная память, является подмножеством VIRT, Также является суммой полей RSan, RSfd и Rssh.
SHR — размер совместной памяти, подмножество используемой памяти RES, которая может использоваться другими процессами

kill - убивает процесс .
kill -сигнал pid_процесса
kill TERM - красиво убивает, со всеми дочерними процессами 
kill KILL - убивает быстро, но все дочерние остаются

pkill - как kill, только нужно передать имя, вместо PID .
killall - тоже убивает процессы по имени, но убивает все процессы с этим именем .

htop - динамический список системных процессов, список обычно выравнивается по использованию ЦПУ .

sed - замена символов в строке, текстовый редактор .
sed -e 's/oo/aa' file.txt > new.txt

